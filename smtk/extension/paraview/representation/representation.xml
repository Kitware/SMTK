<ServerManagerConfiguration>
  <ProxyGroup name="representations">
    <RepresentationProxy name="SMTKModelRepresentation"
                         class="vtkSMTKModelRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>
        This specialized representation uses extended functionality of the
        composite mapper to better integrate with SMTKModel. Handles selection
        of SMTK Model entities.
      </Documentation>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Get/Set the visibility of the
        representation.</Documentation>
      </IntVectorProperty>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
          <Documentation>Model entity tessellations input. </Documentation>
      </InputProperty>
      <InputProperty command="SetInputConnection"
                     label="Glyph prototypes"
                     name="GlyphPrototypes"
                     panel_visibility="never"
                     port_index="1">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObjectTree"/>
        </DataTypeDomain>
          <Documentation>Glyph vertices.</Documentation>
      </InputProperty>
      <InputProperty command="SetInputConnection"
                     label="Glyph points"
                     name="GlyphPoints"
                     panel_visibility="never"
                     port_index="2">
        <Documentation>Glyph source objects.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
          <DataType value="vtkCompositeDataSet" />
        </DataTypeDomain>
        <Hints>
          <ProxyPropertyWidget selected_proxy_panel_visibility="advanced" />
          <!-- show the selected proxy's panel, only in advanced mode. -->
        </Hints>
      </InputProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
        <FieldDataDomain name="field_list"
                         disable_update_domain_entries="1">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </StringVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable">
        <Documentation>Set the lookup-table to use to map data array to colors.
        Lookuptable is only used with MapScalars to ON.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="0"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to True, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolateScalarsBeforeMapping"
                         default_values="1"
                         name="InterpolateScalarsBeforeMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to true (default), texture coordinates
        are sent to and interpolated by the graphics card. This is
        equivalent with interpolating scalars and then mapping them to
        obtain colors between points. Otherwise, colors are sent to
        and interpolated by the graphics card.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="1.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointSize"
                            default_values="6.0"
                            name="PointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <StringVectorProperty command="SetRepresentation"
                            default_values="Surface"
                            name="Representation"
                            panel_widget="display_representation_selector"
                            number_of_elements="1">
        <StringListDomain name="string_list">
          <String value="Points" />
          <String value="Wireframe" />
          <String value="Surface" />
          <String value="Surface With Edges" />
        </StringListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            label="Translation"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16"
                            panel_visibility="never">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          tranform to use.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSelectionColor"
                            default_values="1.0 1.0 0.0"
                            name="Color"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <ProxyProperty command="SetTexture"
                     name="Texture"
                     panel_widget="texture_selector"
                     null_on_empty="1">
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty command="SetSelectionPointSize"
                            default_values="8.0"
                            name="SelectionPointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSelectionLineWidth"
                            default_values="4.0"
                            name="SelectionLineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty name="BlockVisibility"
                         command="SetBlockVisibility"
                         clean_command="RemoveBlockVisibilities"
                         number_of_elements_per_command="2"
                         repeatable="1">
        <Documentation>
          Set the visibility for a block. Value is (property, visibility).
        </Documentation>
      </IntVectorProperty>
      <DoubleMapProperty name="BlockColor"
                         command="SetBlockColor"
                         clean_command="RemoveBlockColors"
                         number_of_components="3"
                         repeatable="1">
        <Documentation>
          Set the color for a block. Value is (index, r, g, b).
        </Documentation>
      </DoubleMapProperty>
      <DoubleMapProperty name="BlockOpacity"
                         command="SetBlockOpacity"
                         clean_command="RemoveBlockOpacities"
                         number_of_components="1"
                         repeatable="1">
        <Documentation>
          Set the opacity for a block. Value is (index, alpha).
        </Documentation>
      </DoubleMapProperty>
      <IntVectorProperty name="InstanceVisibility"
                         command="SetInstanceVisibility"
                         clean_command="RemoveInstanceVisibilities"
                         number_of_elements_per_command="2"
                         repeatable="1">
        <Documentation>
          Set the visibility for an instance point block (glyph). Value is
          (property, visibility).
        </Documentation>
      </IntVectorProperty>
      <DoubleMapProperty name="InstanceColor"
                         command="SetInstanceColor"
                         clean_command="RemoveInstanceColors"
                         number_of_components="3"
                         repeatable="1">
        <Documentation>
          Set the color for an instance point block (glyph). Value is (index, r, g, b).
        </Documentation>
      </DoubleMapProperty>
    <!-- End of SMTKModelRepresentation -->
    </RepresentationProxy>

<!-- ====================================================================== -->
    <SMTKModelRepresentationProxy name="SMTKModelCompositeRepresentation"
                                  class="vtkPVCompositeRepresentation"
                                  processes="client|dataserver|renderserver">
      <Documentation>SMTK's default representation. It is a stripped down
      version of PVRepresentationBase (selection is handled by
      SMTKModelRepresentation).</Documentation>

      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkDataSet" />
          <DataType value="vtkGenericDataSet" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1"></InputArrayDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <RepresentationType subproxy="SMTKModelRepresentation"
                          text="SMTK Model"/>
<!--
      <RepresentationType subproxy="OutlineRepresentation"
                          text="Outline" />
-->
      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            default_values="vtkOriginalCellIds"
                            name="SelectionCellFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_cell"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            default_values="vtkOriginalPointIds"
                            name="SelectionPointFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <ProxyProperty name="DataAxesGrid"
                     command="SetGridAxesRepresentation"
                     panel_widget="proxy_editor">
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="GridAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <ProxyEditorPropertyWidget property="GridAxesVisibility" />
        </Hints>
      </ProxyProperty>

      <SubProxy>
        <Proxy name="SMTKModelRepresentation"
          proxygroup="representations"
          proxyname="SMTKModelRepresentation">
        </Proxy>
        <ExposedProperties>
          <PropertyGroup panel_visibility="default"
                         panel_widget="ColorEditor"
                         label="Coloring" >
            <Property name="ColorArrayName" />
            <Property name="LookupTable" />
          </PropertyGroup>
          <PropertyGroup label="Scalar Coloring">
            <Property name="MapScalars"
                      panel_visibility="always" />
            <Property name="InterpolateScalarsBeforeMapping"
                      panel_visibility="always" />
          </PropertyGroup>
          <PropertyGroup label="Styling">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="PointSize"
                      panel_visibility="always"
                      panel_visibility_default_for_representation="points" />
            <Property name="LineWidth"
                      panel_visibility="always"
                      panel_visibility_default_for_representation="wireframe" />
          </PropertyGroup>

          <PropertyGroup label="Lighting">
            <Property name="SpecularPower"
                      panel_visibility="always" />
            <Property name="Specular" panel_visibility="always" />
            <Property name="Ambient" panel_visibility="always"/>
            <Property name="Diffuse" panel_visibility="always"/>
          </PropertyGroup>

          <PropertyGroup label="Transforming">
            <Property name="Position"
                      panel_visibility="always" />
            <Property name="Scale"
                      panel_visibility="always" />
            <Property name="Orientation"
                      panel_visibility="always" />
            <Property name="Origin"
                      panel_visibility="always" />
            <Property name="UserTransform"
                      panel_visibility="never" />
          </PropertyGroup>

          <PropertyGroup label="Miscellaneous">
            <Property name="Pickable"
                      panel_visibility="always" />
            <Property name="Texture"
                      panel_visibility="always" />
            <Property name="BlockVisibility"
                      panel_visibility="never" />
            <Property name="BlockColor"
                      panel_visibility="never" />
            <Property name="BlockOpacity"
                      panel_visibility="never" />
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
<!--
      <SubProxy>
        <Proxy name="OutlineRepresentation"
               proxygroup="representations"
               proxyname="OutlineRepresentation"></Proxy>
        <ShareProperties subproxy="SMTKModelRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
-->
    </SMTKModelRepresentationProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
